/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AcademicRankDetailsResponse } from '../models/academic-rank-details-response';
import { findAcademicRankDetailsById } from '../fn/academic-rank-details/find-academic-rank-details-by-id';
import { FindAcademicRankDetailsById$Params } from '../fn/academic-rank-details/find-academic-rank-details-by-id';
import { findAllAcademicRankDetails } from '../fn/academic-rank-details/find-all-academic-rank-details';
import { FindAllAcademicRankDetails$Params } from '../fn/academic-rank-details/find-all-academic-rank-details';
import { saveAcademicRankDetails } from '../fn/academic-rank-details/save-academic-rank-details';
import { SaveAcademicRankDetails$Params } from '../fn/academic-rank-details/save-academic-rank-details';

@Injectable({ providedIn: 'root' })
export class AcademicRankDetailsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `findAllAcademicRankDetails()` */
  static readonly FindAllAcademicRankDetailsPath = '/academic-rank/details';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `findAllAcademicRankDetails()` instead.
   *
   * This method doesn't expect any request body.
   */
  findAllAcademicRankDetails$Response(params?: FindAllAcademicRankDetails$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<AcademicRankDetailsResponse>>> {
    return findAllAcademicRankDetails(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `findAllAcademicRankDetails$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  findAllAcademicRankDetails(params?: FindAllAcademicRankDetails$Params, context?: HttpContext): Observable<Array<AcademicRankDetailsResponse>> {
    return this.findAllAcademicRankDetails$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<AcademicRankDetailsResponse>>): Array<AcademicRankDetailsResponse> => r.body)
    );
  }

  /** Path part for operation `saveAcademicRankDetails()` */
  static readonly SaveAcademicRankDetailsPath = '/academic-rank/details';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `saveAcademicRankDetails()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  saveAcademicRankDetails$Response(params: SaveAcademicRankDetails$Params, context?: HttpContext): Observable<StrictHttpResponse<number>> {
    return saveAcademicRankDetails(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `saveAcademicRankDetails$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  saveAcademicRankDetails(params: SaveAcademicRankDetails$Params, context?: HttpContext): Observable<number> {
    return this.saveAcademicRankDetails$Response(params, context).pipe(
      map((r: StrictHttpResponse<number>): number => r.body)
    );
  }

  /** Path part for operation `findAcademicRankDetailsById()` */
  static readonly FindAcademicRankDetailsByIdPath = '/academic-rank/details/{academic-rank-id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `findAcademicRankDetailsById()` instead.
   *
   * This method doesn't expect any request body.
   */
  findAcademicRankDetailsById$Response(params: FindAcademicRankDetailsById$Params, context?: HttpContext): Observable<StrictHttpResponse<AcademicRankDetailsResponse>> {
    return findAcademicRankDetailsById(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `findAcademicRankDetailsById$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  findAcademicRankDetailsById(params: FindAcademicRankDetailsById$Params, context?: HttpContext): Observable<AcademicRankDetailsResponse> {
    return this.findAcademicRankDetailsById$Response(params, context).pipe(
      map((r: StrictHttpResponse<AcademicRankDetailsResponse>): AcademicRankDetailsResponse => r.body)
    );
  }

}
